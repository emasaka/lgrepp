#!/usr/bin/env perl
use strict;
use warnings;
use feature 'say';
use Getopt::Long;
use Encode;
use Encode::Guess;
use POSIX qw(isatty);

sub parse_color_opts {
    my $conf = shift;
    my $color= $conf->{opts}->{color};

    if ($color &&
        (($color eq 'always') ||
         (($color eq 'auto') && isatty(*STDOUT)) )) {
        $conf->{color} = 1;
    }
}

sub parse_pattern_opts {
    my $conf = shift;
    my $mod = '';
    $mod .= 'i' if ($conf->{opts}->{'ignore-case'});
    $conf->{pattern_re} =
        (($mod eq '') ? qr/$conf->{pattern}/ : qr/(?$mod)$conf->{pattern}/);
}

sub parse_file_num_opts {
    my $conf = shift;
    $conf->{with_filename} = 1 if ($conf->{opts}->{'with-filename'});
    $conf->{line_number} = 1 if ($conf->{opts}->{'line-number'});
}

sub parse_opts {
    my $conf = shift;
    parse_color_opts($conf);
    parse_pattern_opts($conf);
    parse_file_num_opts($conf);
}

my $HILIGHT_COLOR = '01;31';

sub lgrepp_file {
    my $conf = shift;
    my $file = shift;

    return if (-d $file);

    open my $fh, '<', $file or do {
        say STDERR "can't open $file";
        return;
    };
    my $data = do { local $/; <$fh>; };
    close $fh;

    my $pattern_re = $conf->{pattern_re};

    if ($data =~ /\x00/) {
        if ($data =~ /$pattern_re/) {
            say "Binary file $file matches";
        }
    } else {
        my $enc = guess_encoding($data, qw(euc-jp shiftjis 7bit-jis));
        my @lines = split /\r?\n/, $enc->decode($data);

        my $linenum = 1;
        for my $line (@lines) {
            if ($line =~ /$pattern_re/) {
                print $file, ':' if ($conf->{with_filename});
                print $linenum, ':' if ($conf->{line_number});

                if ($conf->{color}) {
                    $line =~ s/$pattern_re/\33[${HILIGHT_COLOR}m\33[K$&\33[m\33[K/g;
                }
                say encode('utf-8', $line);
            }
            $linenum++;
        }
    }
}

sub usage {
    say STDERR 'Usage: lgrepp [options] PATTERN [FILE...]';
    exit 1;
}

my %opts;
GetOptions(\%opts,
           'ignore-case|i',
           'color=s',
           'with-filename|H',
           'line-number|n',
       );

if (@ARGV == 0) {
    usage;
}

my $ptn = decode('utf-8', shift @ARGV); # assuming UTF-8

my $conf = +{
    pattern => $ptn,
    opts => \%opts,
};
if (@ARGV == 0) {
    parse_opts($conf);
    lgrepp_file($conf, '/dev/stdin');
} else {
    $conf->{with_filename} = (scalar(@ARGV) > 1);
    parse_opts($conf);
    for my $f (@ARGV) {
        lgrepp_file($conf, $f);
    }
}
