#!/usr/bin/env perl
use strict;
use warnings;
use feature 'say';
use Getopt::Long;
use Encode;
use Encode::Guess;
use POSIX qw(isatty);

sub parse_color_opts {
    my $conf = shift;
    my $color= $conf->{opts}->{color};

    if ($color &&
        (($color eq 'always') ||
         (($color eq 'auto') && isatty(*STDOUT)) )) {
        $conf->{color} = 1;
    }
}

sub opt2modifier {
    my $opts = shift;
    my $mod = '';
    $mod .= 'i' if ($opts->{i});
    $mod;
}

my $HILIGHT_COLOR = '01;31';

sub lgrepp_file {
    my $conf = shift;
    my $file = shift;

    open my $fh, '<', $file or die;
    my $data = do { local $/; <$fh>; };
    close $fh;

    parse_color_opts($conf);
    my $mod = opt2modifier($conf->{opts});
    my $pattern_re = qr/(?$mod)$conf->{pattern}/;

    my $enc = guess_encoding($data, qw(euc-jp shiftjis 7bit-jis));
    my @lines = split /\r?\n/, $enc->decode($data);

    for my $line (@lines) {
        if ($line =~ /$pattern_re/) {
            if ($conf->{numfiles} > 1) {
                print $file, ':';
            }
            if ($conf->{color}) {
                $line =~ s/$pattern_re/\33[${HILIGHT_COLOR}m\33[K$&\33[m\33[K/g;
            }

            say encode('utf-8', $line);
        }
    }
}

sub usage {
    say 'Usage: lgrepp [options] PATTERN [FILE...]';
    exit 1;
}

my %opts;
GetOptions(\%opts, 'i', 'color=s');

my $ptn;
if (@ARGV == 1) {
    $ptn = decode('utf-8', shift @ARGV); # assuming UTF-8

    my $conf = +{
        pattern => $ptn,
        numfiles => 0,
        opts => \%opts,
    };
    lgrepp_file($conf, '/dev/stdin');
} elsif (@ARGV >= 2) {
    $ptn = decode('utf-8', shift @ARGV); # assuming UTF-8

    my $conf = +{
        pattern => $ptn,
        numfiles => scalar(@ARGV),
        opts => \%opts,
    };
    for my $f (@ARGV) {
        lgrepp_file($conf, $f);
    }
} else {
    usage;
}
